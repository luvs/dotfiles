# --- General -----------------------------------------------------------------
# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

set-option -g display-time 2000

setw -g mode-keys vi
setw -g xterm-keys on

# --- Controls ----------------------------------------------------------------
# unbind default key bindings, we're going to override
unbind-key "\$"     # rename-session
unbind-key ,        # rename-window
unbind-key %        # split-window -h
unbind-key '"'      # split-window
unbind-key \}       # swap-pane -D
unbind-key \{       # swap-pane -U
unbind-key [        # paste-buffer
unbind-key ]
unbind-key "'"      # select-window
unbind-key n        # next-window
unbind-key p        # previous-window
unbind-key M-n      # next window with alert
unbind-key M-p      # next window with alert
unbind-key o        # focus thru panes
unbind-key &        # kill-window
unbind-key =        # choose-buffer
unbind-key z        # zoom-pane

# reload config file
bind-key , source-file ~/.tmux.conf \; display "Reloaded!"

# rename session and window
bind-key r command-prompt -I "#{window_name}" "rename-window '%%'"
bind-key R command-prompt -I "#{session_name}" "rename-session '%%'"

# split panes using | and -
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"

# switch panes using Alt-arrow without prefix
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D
bind-key -r C-o swap-pane -D

# swap panes back and forth with 1st pane
# when in main-(horizontal|vertical) layouts, 
# the biggest/widest panel is always @1
bind-key \\ if '[ #{pane_index} -eq  ]' \
     'swap-pane -s "!"' \
     'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'

# kill pane/window/session shortcuts
bind-key x kill-pane
bind-key X kill-window
bind-key C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind-key Q confirm-before -p "kill-session #S? (y/n)" kill-session

# hide/show status bar
bind-key -n S-Up set-option -g status
bind-key -n S-Down set-option -g status

# next/Prev window
bind-key -n S-Left previous-window
bind-key -n S-Right next-window
bind-key -r Tab last-window

# zoom pane
bind-key + resize-pane -Z


# --- Windows -----------------------------------------------------------------
# don't rename windows automatically
set-option -g allow-rename off 

# set window and pane index to 1 (0 by default)
set-option -g base-index 1
set-window-option -g pane-base-index 1

bind-key m setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
bind-key M if -F '#{monitor-silence}' \
    'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
    'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'
set-option -g visual-activity on
set-option -g visual-silence off
set-option -g bell-action none

# --- Copy/scroll/clipboard ---------------------------------------------------
set-option -g @copy_use_osc52_fallback on

# use vim keybindings in copy mode
set-window-option -g mode-keys vi

# copy/paste like vim
bind-key Escape copy-mode
bind-key p paste-buffer
bind-key C-p choose-buffer

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Y send-keys -X copy-line \;\
    run "tmux save-buffer - | pbcopy"
bind-key -T copy-mode-vi D send-keys -X copy-end-of-line \;\
    run "tmux save-buffer - | pbcopy"
bind-key -T copy-mode-vi A send-keys -X append-selection-and-cancel \;\
    run "tmux save-buffer - | pbcopy"

# --- Theme -------------------------------------------------------------------
set -g allow-passthrough 1

color_orange="colour16" 
color_purple="colour5" 
color_green="colour2" 
color_blue="colour4"
color_yellow="colour3"
color_red="colour1"
color_black="colour8"
color_white="colour7" 
color_gray="#636C7E"

color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="$color_gray"
color_main="$color_orange"
color_secondary="$color_orange"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"

# --- Appearence and status bar -----------------------------------------------
set -g mode-style "fg=default,bg=$color_main"

# command line style
set -g message-style "fg=$color_black,bg=$color_light"

# status line style
set -g status-style "fg=$color_status_text,bg=default"

# window segments in status line
set -g window-status-separator ""
separator_powerline_left=""
separator_powerline_right=""

setw -g window-status-style "fg=$color_status_text,bg=default"
setw -g window-status-format "#I:#W "
setw -g window-status-current-style "fg=$color_yellow,bold,bg=default"
setw -g window-status-current-format "#I:#W* "

setw -g window-status-last-style fg=blue

# when window has monitoring notification
setw -g window-status-activity-style "fg=$color_main"

# outline for active pane
setw -g pane-active-border-style "fg=$color_main"
setw -g pane-border-style "fg=#393939"

# general status bar settings
set -g status on
set -g status-interval 5
set -g status-position top
set -g status-justify left
set -g status-right-length 100

# define widgets we're going to use in status bar
# note, that this is not the complete list, some of them are loaded from plugins
wg_session="#[fg=$color_session_text] [#S] #[default]"
wg_battery="#{battery_status_fg}#{battery_icon} #{battery_percentage} "
wg_date="#[fg=$color_secondary]%h %d %H:%M#[default]"
wg_user_host="#[fg=$color_secondary]#(whoami)#[default]@#H"
wg_is_zoomed="#[fg=$color_dark,bg=$color_secondary]#{?window_zoomed_flag,[Z],}#[default]"
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]\n"

set -g status-left "$wg_session"
set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host | $wg_date | $wg_battery"

# Configure view templates for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_mem_view_tmpl 'MEM:#[fg=#{mem.color}]#{mem.pused}#[default] #{mem.used}'

# Configure colors for tmux-plugin-sysstat "MEM" and "CPU" widget
set -g @sysstat_cpu_color_low "$color_level_ok"
set -g @sysstat_cpu_color_medium "$color_level_warn"
set -g @sysstat_cpu_color_stress "$color_level_stress"

set -g @sysstat_mem_color_low "$color_level_ok"
set -g @sysstat_mem_color_medium "$color_level_warn"
set -g @sysstat_mem_color_stress "$color_level_stress"

set -g @sysstat_swap_color_low "$color_level_ok"
set -g @sysstat_swap_color_medium "$color_level_warn"
set -g @sysstat_swap_color_stress "$color_level_stress"

# Configure tmux-battery widget colors
set -g @batt_color_full_charge "#[fg=$color_level_ok]"
set -g @batt_color_high_charge "#[fg=$color_level_ok]"
set -g @batt_color_medium_charge "#[fg=$color_level_warn]"
set -g @batt_color_low_charge "#[fg=$color_level_stress]"

# Configure tmux-prefix-highlight colors
set -g @prefix_highlight_output_prefix '['
set -g @prefix_highlight_output_suffix ']'
set -g @prefix_highlight_fg "$color_dark"
set -g @prefix_highlight_bg "$color_secondary"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr "fg=$color_dark,bg=$color_secondary"

# --- Plugins -----------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'

set -g @batt_icon_charge_tier8 '⣿'
set -g @batt_icon_charge_tier7 '⣾'
set -g @batt_icon_charge_tier6 '⣶'
set -g @batt_icon_charge_tier5 '⣴'
set -g @batt_icon_charge_tier4 '⣤'
set -g @batt_icon_charge_tier3 '⣠'
set -g @batt_icon_charge_tier2 '⣀'
set -g @batt_icon_charge_tier1 '⢀'
set -g @batt_icon_status_charging '⏻'
set -g @batt_icon_status_charged '⏻'

# --- Popups ------------------------------------------------------------------
#bind j if-shell -F '#{==:#{session_name},popup}' {
#   detach-client
#} {
#   select-window -t '=popup:today'
#   popup -w90% -h90% -KER "tmux attach -t popup || tmux new -s popup"
#}
#bind b if-shell -F '#{==:#{session_name},popup}' {
#   detach-client
#} {
#   select-window -t '=popup:backlog'
#   popup -w90% -h90% -KER "tmux attach -t popup || tmux new -s popup"
#}

# --- Nesting local and remote sessions ---------------------------------------

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/.tmux/tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S

# Install
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
